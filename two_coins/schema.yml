openapi: 3.0.3
info:
  title: 2coins API
  version: 0.0.1
  description: Your project description
paths:
  /api/transactions/:
    get:
      operationId: transactions_list
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionDetail'
          description: ''
    post:
      operationId: transactions_create
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/transactions/{id}/:
    get:
      operationId: transactions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
          description: ''
    put:
      operationId: transactions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Transaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    patch:
      operationId: transactions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - transactions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTransaction'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
    delete:
      operationId: transactions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this transaction.
        required: true
      tags:
      - transactions
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    NestedAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Account name
          maxLength: 30
        balance:
          type: number
          format: double
          title: Account balance
        currency:
          type: integer
      required:
      - currency
      - id
      - name
    PatchedTransaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        amount:
          type: number
          format: double
        amount_account_currency:
          type: number
          format: double
          nullable: true
          title: Amount in account's currency
        exchange_rate:
          type: number
          format: double
          nullable: true
          title: Exchange rate for transaction
        description:
          type: string
          nullable: true
          maxLength: 50
        date:
          type: string
          format: date-time
          title: Transaction date/time
        currency:
          type: integer
        category:
          type: integer
          nullable: true
        account:
          type: integer
    Transaction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        amount:
          type: number
          format: double
        amount_account_currency:
          type: number
          format: double
          nullable: true
          title: Amount in account's currency
        exchange_rate:
          type: number
          format: double
          nullable: true
          title: Exchange rate for transaction
        description:
          type: string
          nullable: true
          maxLength: 50
        date:
          type: string
          format: date-time
          title: Transaction date/time
        currency:
          type: integer
        category:
          type: integer
          nullable: true
        account:
          type: integer
      required:
      - account
      - amount
      - created_at
      - currency
      - id
      - updated_at
    TransactionDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        account:
          $ref: '#/components/schemas/NestedAccount'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        amount:
          type: number
          format: double
        amount_account_currency:
          type: number
          format: double
          nullable: true
          title: Amount in account's currency
        exchange_rate:
          type: number
          format: double
          nullable: true
          title: Exchange rate for transaction
        description:
          type: string
          nullable: true
          maxLength: 50
        date:
          type: string
          format: date-time
          title: Transaction date/time
        currency:
          type: integer
        category:
          type: integer
          nullable: true
      required:
      - account
      - amount
      - created_at
      - currency
      - id
      - updated_at
    TransactionTypeEnum:
      enum:
      - '-'
      - +
      type: string
      description: |-
        * `-` - Expense
        * `+` - Income
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
